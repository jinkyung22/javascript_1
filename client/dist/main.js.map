{"version":3,"file":"main.js","mappings":"mBAAO,SAASA,EAAWC,GACzBC,KAAKD,MAAQA,CACf,CCFO,SAASE,EAAKC,EAAKC,EAAMC,GAC9BJ,KAAKE,IAAMA,EACXF,KAAKG,KAAOA,EAGZH,KAAKK,SAAWC,SAASC,cAAc,UACvCP,KAAKK,SAASG,YAAcL,EAE5B,IAAIM,EAAQT,KAIZA,KAAKK,SAASK,QAAU,WACtBN,EAAQK,EACV,CACF,CCZA,SAASE,EAAKC,GAMZ,IAAIC,EAAOd,EAAMe,QAAQF,GAEtBA,IAASG,EAEVC,MAAM,UAEAH,IAASE,EAEfC,MAAM,SAGNA,MAAM,UAGRC,cAAcC,GACdC,EAAQC,gBAAgB,YACxBrB,EAAMsB,SAASC,SAAQ,SAASV,GAC9BA,EAAKW,SAAQ,EACf,GACF,CFxBAzB,EAAW0B,UAAUH,OAAS,WAC5B,OAAOrB,KAAKD,KACd,EAEAD,EAAW0B,UAAUV,QAAU,SAASF,GACtC,IAAIa,EAAQzB,KAAKD,MAAM2B,QAAQd,GAE/B,OADWZ,KAAKD,MAAM0B,EAAM,IACPzB,KAAKD,MAAM,EAClC,ECQAE,EAAKuB,UAAUG,OAAS,SAASC,GAC/BA,EAASC,OAAO7B,KAAKK,SACvB,EAGAJ,EAAKuB,UAAUD,QAAU,SAASO,GAC7BA,EAED9B,KAAKK,SAAS0B,aAAa,YAAY,GAEvC/B,KAAKK,SAASe,gBAAgB,WAElC,ECAA,IAQIF,EARAnB,EAAQ,IAAID,EAAW,CACzB,IAAIG,EAAK,SAAU,KAAMU,GACzB,IAAIV,EAAK,OAAQ,KAAMU,GACvB,IAAIV,EAAK,QAAS,IAAKU,KAIrBI,EAAiBhB,EAAMsB,SAAS,GAGhCF,EAAUb,SAAS0B,eAAe,SAClCC,EAAQ3B,SAAS0B,eAAe,OAEhCE,EAAgB5B,SAAS0B,eAAe,gBAI5CjC,EAAMsB,SAASC,SAAQ,SAASV,GAC9BA,EAAKe,OAAOO,GACZtB,EAAKW,SAAQ,EACf,IAGAJ,EAAQT,QAAU,WAChBS,EAAQY,aAAa,YAAY,GACjChC,EAAMsB,SAASC,SAAQ,SAASV,GAC9BA,EAAKW,SAAQ,EACf,IAGFL,EAAUiB,aAAY,WACpBpB,EAAiBhB,EAAMe,QAAQC,GAC/BkB,EAAMzB,YAAcO,EAAeZ,IACrC,GAAG,IACH,C","sources":["webpack://client/./src/circleData.js","webpack://client/./src/item.js","webpack://client/./src/index.js"],"sourcesContent":["export function CircleData(items){\r\n  this.items = items;\r\n}\r\n\r\nCircleData.prototype.getAll = function(){\r\n  return this.items;\r\n};\r\n\r\nCircleData.prototype.getNext = function(item){\r\n  var index = this.items.indexOf(item);\r\n  var next = this.items[index+1];\r\n  return next ? next : this.items[0]; // next가 있으면 다음거, 없으면 처음거 반환해!\r\n}","export function Item(key, name, onClick){\r\n  this.key = key;\r\n  this.name = name;\r\n\r\n  // 버튼만들기\r\n  this.buttonEl = document.createElement(\"button\");\r\n  this.buttonEl.textContent = name;\r\n\r\n  var _self = this;\r\n  // buttonEl.onclick = function(){onClick(this)}로 하게되면\r\n  // this의 호출자가 buttonEl이 되기 때문에 window를 호출.\r\n  // bind해줄수있지만 일단은 _self에 this를 담아서 넣어주기\r\n  this.buttonEl.onclick = function(){\r\n    onClick(_self);\r\n  }\r\n}\r\n\r\n// Item 클래스의 함수는 prototye을 통해 만들어준다\r\n// render라는 함수를 정의해보자\r\n// 매개변수로 넘겨주는 함수 밑에다가 append해줄것임 > 호출자의 튼을\r\nItem.prototype.render = function(parentEl){\r\n  parentEl.append(this.buttonEl)\r\n}\r\n\r\n// disable이라는 함수는 값이 true면 disable해주고, 아니면 활성화\r\nItem.prototype.disable = function(value){\r\n  if(value)\r\n  {\r\n    this.buttonEl.setAttribute(\"disabled\", true);\r\n  }else{\r\n    this.buttonEl.removeAttribute(\"disabled\");\r\n  }\r\n}","import { CircleData } from \"./circleData.js\";\r\nimport { Item } from \"./item.js\";\r\n\r\nfunction game(item){\r\n  // 가위 - 바위 - 보 순서로 동그랗게 연결되어있다.\r\n  // 나보다 앞에 있는 항목한테는 지고, 뒤에있는 항목한테는 이긴다.\r\n  \r\n  // item : 내가누른거\r\n  // comCurrentItem : 컴퓨터가 가지고 있는값\r\n  var next = items.getNext(item);\r\n\r\n  if(item === comCurrentItem)\r\n  {\r\n    alert(\"비겼습니다.\")\r\n  }\r\n  else if(next === comCurrentItem) // 내 다음항목이랑 같아면 짐\r\n  {\r\n    alert(\"졌습니다.\")\r\n  }\r\n  else{\r\n    alert(\"이겼습니다.\")\r\n  }\r\n\r\n  clearInterval(timerID) // 글자계속 도는거 멈춰주고\r\n  startEl.removeAttribute(\"disabled\");//시작버튼 활성화\r\n  items.getAll().forEach(function(item){\r\n    item.disable(true); // 나머지버튼 다시 비활성화\r\n  })\r\n}\r\n\r\n// 가위-바위-보 순환구조 만들어줌.\r\n// 배열로 넣어줘야함\r\nvar items = new CircleData([\r\n  new Item('sissor', \"가위\", game),\r\n  new Item('rock', \"바위\", game),\r\n  new Item('paper', \"보\", game)\r\n])\r\n\r\n// 여기서 items를 사용하기 때문에, items를 먼저 선언해줘야함\r\nvar comCurrentItem = items.getAll()[0]; // 현재 컴터값 초기화\r\nvar timerID;\r\n\r\nvar startEl = document.getElementById(\"start\"); // 시작버튼\r\nvar comEl = document.getElementById(\"com\"); // 가위,바위,보 순환하는 텍스트라인\r\n\r\nvar itemButtonsEl = document.getElementById(\"item-buttons\"); // 여기 밑에 가위바위보 버튼 만들어야함\r\n\r\n// 1. 버튼 붙여주기(항목랜더링)\r\n// 가위, 바위, 보를 각각 붙여주는것이아니라 한번만 호출해줌\r\nitems.getAll().forEach(function(item){\r\n  item.render(itemButtonsEl);\r\n  item.disable(true); // 맨첨에는 disable처리 되어있어야함\r\n})\r\n\r\n// 2. 시작버튼 클릭시 - 이벤트핸들링\r\nstartEl.onclick = function(){\r\n  startEl.setAttribute(\"disabled\", true);\r\n  items.getAll().forEach(function(item){\r\n    item.disable(false); // 시작버튼 누르면 활성화돼야함\r\n  })\r\n\r\n// 2. 시작버튼 클릭시 - 가위바위보 텍스트 돌아가는구조 만들기\r\ntimerID = setInterval(function(){\r\n  comCurrentItem = items.getNext(comCurrentItem)\r\n  comEl.textContent = comCurrentItem.name;\r\n}, 100)\r\n}"],"names":["CircleData","items","this","Item","key","name","onClick","buttonEl","document","createElement","textContent","_self","onclick","game","item","next","getNext","comCurrentItem","alert","clearInterval","timerID","startEl","removeAttribute","getAll","forEach","disable","prototype","index","indexOf","render","parentEl","append","value","setAttribute","getElementById","comEl","itemButtonsEl","setInterval"],"sourceRoot":""}